@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Person(administrator, "Administrator")
Person(patient, "Patient")

Container_Boundary(logService, "Сервис по хранение логов доступа к данным") {
    Component(logServiceBack, "Back", "Java", "Сохраняет логи доступа и выгружает их")
    ComponentDb(logServiceDB, "БД", "Postgres", "Хранит логи")

    Rel(logServiceBack, logServiceDB, "Сохрание логов")
}

Container_Boundary(iamService, "IAM сервис") {
    Component(iamServiceAuthentication, "Authentication", "Java", "Проверяет аутентификацию пользователей")
    Component(iamServiceAuthorization, "Authorization", "Java", "Проверяет авторизацию пользователей")
    ComponentDb(iamServiceDB, "БД", "Postgres", "Хранит связи атрибутов с данными и данные пользователей")

    Rel(iamServiceAuthentication, iamServiceDB, "Сохрание данных")
    Rel(iamServiceAuthorization, iamServiceDB, "Сохрание данных")
}

note bottom of iamServiceAuthorization
На основе атрибутов полльзователя (ABAC) проверяет доступ к данным по тегам:
- персональной информации пациента
- мед книжки
- данных анализов
- расписания
- файлам

Администратор имеет доступ к тегам "PII" когда имеет атрибут "работает", который проставляется во время его работы

Пациент имеет доступ к тегам "PII", "PHI", "Клинические данные", которые связаны с ним по его идентификатору
end note

Container_Boundary(patientService, "Сервис по хранению данных пользователей") {
    Component(patientsCore, "Patients", "Java", "Отвечает за доступ к персональным данным пользователей")
    ComponentDb(patientDB, "Patient БД", "Postgres")
    ComponentDb(patientS3, "S3", "S3")

    Rel(patientsCore, patientS3, "Сохрание файлов пациентов")
    Rel(patientsCore, patientDB, "Сохрание данных о пациенте")
}

note bottom of patientDB
Хранит персональную информацию о пользователях
- ФИО, дату рождения, телефон и электронную почту: имеет тег "PII"
- дополнительную информацию: имеет тег "PII"
- медицинскую книжку: имеет тег "PHI"
- результаты анализов: имеет тег "Клинические данные"
- связи с файлами

БД шифрует свои данные
end note

note bottom of patientS3
Хранит файлы пользователей (снимки, результаты анализов и прочее): имеет тег "Клинические данные"

Шифрует свои данные
end note

Container_Boundary(journalService, "Сервис по хранению расписаний") {
    Component(journalCore, "Journals", "Java", "Отвечает за доступ к расписаниям врачей")
    ComponentDb(journalDB, "Journal БД", "Postgres")

    Rel(journalCore, journalDB, "Сохрание данных о записях к врачу")
}

note bottom of journalDB
Хранит пациентов записи к врачам:
- ид пациета, врач, время: имеет тег "Запись к врачу"

БД шифрует свои данные
end note

Container_Boundary(clientPortal, "Портал для клиентов") {
    Component(clientPortalFront, "Front", "React")
    Component(clientPortalBack, "Back", "Java")
    ComponentDb(clientPortalDB, "БД", "Postgres", "Хранит данные для работы приложения")

    Rel(clientPortalFront, clientPortalBack, "Использование API")
    Rel(clientPortalBack, clientPortalDB, "Сохрание данных")
}

Container_Boundary(administratorPortal, "Портал для сотрудников ресепшена") {
    Component(administratorPortalFront, "Front", "React")
    Component(administratorPortalBack, "Back", "Java")
    ComponentDb(administratorPortalDB, "БД", "Postgres", "Хранит данные для работы приложения")

    Rel(administratorPortalFront, administratorPortalBack, "Использование API")
    Rel(administratorPortalBack, administratorPortalDB, "Сохрание данных")
}

Rel(clientPortalBack, journalCore, "Сохранение записи о враче", "HTTPS")
Rel(clientPortalBack, patientsCore, "Просмотр и изменение информации о пациенте", "HTTPS")
Rel(clientPortalBack, iamServiceAuthentication, "Проверка пациента на доступа к ресурсам", "HTTPS")

Rel(administratorPortalBack, patientsCore, "Сохранение информации о пациенте", "HTTPS")
Rel(administratorPortalBack, journalCore, "Просмотр информации о записи к врачу", "HTTPS")
Rel(administratorPortalBack, iamServiceAuthentication, "Проверка администратора на доступа к ресурсам", "HTTPS")

Rel(patient, clientPortalFront, "Запись к врачу / Изменение своих данных / Просмотр файлов", "HTTPS")

Rel(administrator, administratorPortalFront, "Просмотр / Регистрация пользователя", "HTTPS")

Rel(patientsCore, iamServiceAuthorization, "Проверка доступов к данным", "HTTPS")
Rel(journalCore, iamServiceAuthorization, "Проверка доступов к данным", "HTTPS")

Rel(patientsCore, logServiceBack, "Сохранение информации о запросе данных", "HTTPS")
Rel(journalCore, logServiceBack, "Сохранение информации о запросе данных", "HTTPS")

@enduml
